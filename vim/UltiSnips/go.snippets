global !p
def snake_case(text):
	snaked = ""
	prev = ""
	for ch in text:
		if prev.islower() and ch.isupper():
			snaked += "_"
		snaked += ch.lower()
		prev = ch
	return snaked
endglobal

snippet p "Package declaration"
package ${1:main}

$2
endsnippet

snippet imp "Import block"
import (
	"${1:fmt}"
	$2
)
$3
endsnippet

snippet f "Function declaration" b
func $1($2) $3 {
	$4
}
$5
endsnippet

snippet fm "Main func" b
func main() {
	${1://Main func}
	$2
}

endsnippet

snippet test "Test Function" b
func Test$1(t *testing.T) {
	${2:t.SkipNow()}
}
$3

endsnippet

snippet fpf "fmt.Printf"
fmt.Printf("$1")
$2
endsnippet

snippet todo "TODO comment"
// TODO: $1
endsnippet

snippet ifer "Error check"
if err != nil {
	${1:return}
}
$2

endsnippet

snippet js "JSON Struct field"
$1 ${2:string} \`json:"`!p snip.rv = snake_case(t[1])`${3:,omitempty}"\`

endsnippet

snippet ts "Struct declaration"
type $1 struct {
	$2
}
$3

endsnippet
